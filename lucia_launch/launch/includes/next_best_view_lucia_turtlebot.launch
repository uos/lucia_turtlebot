<?xml version="1.0" ?>
<launch>
  <arg name="sim" default="false" />
  <arg name="map_file_only_walls" default="$(find lucia_gazebo_worlds)/maps/lucia_arena_only_walls.yaml"/>

  <node name="map_server_only_walls" pkg="map_server" type="map_server" args="$(arg map_file_only_walls)" ns="only_walls" output="screen">
    <param name="frame_id" type="string" value="/map"/>
  </node>

  <node if="$(arg sim)" name="point_cloud_2_motion_filter" pkg="sensor_motion_filter" type="point_cloud_2_motion_filter" output="screen" respawn="true">
    <param name="static_frame" type="string" value="/map" />
    <param name="block_time"   type="double" value="3.0" />
    <param name="max_distance" type="double" value="0.01" />
    <param name="max_rotation" type="double" value="0.002" />
    <remap from="cloud_in" to="top_camera/depth/points" />
    <remap from="cloud_out" to="top_camera/depth/motion_filtered/points" />
  </node>

  <node     if="$(arg sim)" name="kinect_throttle" type="throttle" pkg="topic_tools" args="messages top_camera/depth/motion_filtered/points 1 top_camera/depth/motion_filtered/throttled/points" />
  <node unless="$(arg sim)" name="kinect_throttle" type="throttle" pkg="topic_tools" args="messages top_camera/depth_registered/points      1 top_camera/depth_registered/throttled/points" />

  <node name="multibot_cloud_filter" pkg="multibot_cloud_filter" type="multibot_cloud_filter" output="screen">
    <remap     if="$(arg sim)" from="cloud_in" to="top_camera/depth/motion_filtered/throttled/points" />
    <remap unless="$(arg sim)" from="cloud_in" to="top_camera/depth_registered/throttled/points" />
    <remap from="cloud_out" to="/all_top_cameras" />
    <param name="robot_radius" value="0.3" />
    <param name="voxel_size" value="0.1" />
    <rosparam param="other_robot_frames">
      - "/turtlebot1_tf/base_footprint"
      - "/turtlebot2_tf/base_footprint"
      - "/turtlebot3_tf/base_footprint"
    </rosparam>
  </node>

  <node name="next_best_view_node" pkg="next_best_view_sampling" type="next_best_view_node" output="screen" respawn="true">
    <!-- general parameters -->
    <param name="resolution" value="0.10" />

    <!-- camera constraints (top xtion on gazebo lucia turtlebot)-->
    <param name="height_min" type="double" value="0.991" />
    <param name="height_max" type="double" value="0.991" />
    <param name="pitch_min"  type="double" value="-0.785" />
    <param name="pitch_max"  type="double" value="-0.785" />
    <param name="range_min"  type="double" value="0.4" />
    <param name="range_max"  type="double" value="3.0" />
    <param name="hfov"       type="double" value="1.01229097" />
    <param name="vfov"       type="double" value="0.785398163" />
    <param name="roll"       type="double" value="0.0" />

    <!-- mapping from frame_id in cloud_in topic to used camera_frame_id -->
    <!-- (has to use '\' instead of '/' in the keys to avoid expansion) -->
    <rosparam if="$(arg sim)" param="frame_id_mapping">
      {turtlebot1_tf\top_camera_depth_optical_frame: turtlebot1_tf/top_camera_depth_frame,
       turtlebot2_tf\top_camera_depth_optical_frame: turtlebot2_tf/top_camera_depth_frame,
       turtlebot3_tf\top_camera_depth_optical_frame: turtlebot3_tf/top_camera_depth_frame}
    </rosparam>

    <rosparam unless="$(arg sim)" param="frame_id_mapping">
      {turtlebot1_tf\top_camera_rgb_optical_frame: turtlebot1_tf/top_camera_rgb_frame,
       turtlebot2_tf\top_camera_rgb_optical_frame: turtlebot2_tf/top_camera_rgb_frame,
       turtlebot3_tf\top_camera_rgb_optical_frame: turtlebot3_tf/top_camera_rgb_frame}
    </rosparam>

    <!-- frames / topics -->
    <param name="load_2dmap" type="bool" value="true" />
    <remap from="/map" to="only_walls/map" />
    <param name="wall_height_2dmap" value="1.0" />
    <param name="world_frame_id" type="string" value="/map" />
    <param name="camera_frame_id" type="string" value="top_camera_depth_frame" />
    <remap from="cloud_in" to="/all_top_cameras" />
  </node>
</launch>
